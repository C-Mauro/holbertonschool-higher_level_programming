# 2-matrix_divided.py

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided(matrix, "c")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [['a', 'b', 'c', 'd'],['a', 'b', 'c', 'd']]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, "2", 3],[1, 2, "3"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [0.33, 0.67, 1.0]]

>>> matrix = [[],[]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix =[[1, 2, 3], [1, 2, 3, 4]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
